#+TITLE: Auto-Indent-Mode
#+AUTHOR: Matthew L. Fidler

* Library Information
 *auto-indent-mode.el* --- Auto indent Minor mode

 - Filename :: [[file:auto-indent-mode.el][auto-indent-mode.el]]
 - Description :: Auto Indent text on Yank/Paste
 - Author :: Matthew L. Fidler, Le Wang & Others
 - Maintainer :: Matthew L. Fidler
 - Created :: Sat Nov  6 11:02:07 2010 (-0500)
 - Version :: 0.68
 - Last-Updated :: Tue Aug 21 12:48:57 2012 (-0500)
 -           By :: Matthew L. Fidler
 -     Update # :: 1464
 - URL :: https://github.com/mlf176f2/auto-indent-mode.el/
 - Keywords :: Auto Indentation
 - Compatibility :: Tested with Emacs 23.x

* Possible Dependencies

  None

* About auto-indent-mode
Provides auto-indentation minor mode for Emacs.  This allows the
following: 

  - Return automatically indents the code appropriately (if enabled)

  - Pasting/Yanking indents the appropriately

  - Killing line will take off unneeded spaces (if enabled)

  - On visit file, indent appropriately, but DONT SAVE. (Pretend like
    nothing happened, if enabled)

  - On save, optionally unttabify, remove trailing white-spaces, and
    definitely indent the file (if enabled).

  - TextMate behavior of keys if desired (see below)

  - Deleting the end of a line will shrink the whitespace to just one
    (if desired and enabled)

  - Automatically indent balanced parenthetical expression, or sexp, if desired
    =auto-indent-current-pairs= or =auto-indent-next-pair= is set
    to be true (disabled by default).  This is not immediate but occurs
    after a bit to allow better responsiveness in emacs.

  - Attempts to set the indentation level (number of spaces for an
    indent) for a major-mode.

All of these options can be customized. (customize auto-indent)
* Installing auto-indent-mode

To use put this in your load path and then put the following in your emacs
file:
#+BEGIN_SRC emacs-lisp :results silent
  (setq auto-indent-on-visit-file t) ;; If you want auto-indent on for files
  (require 'auto-indent-mode)
#+END_SRC

If you (almost) always want this on, add the following to ~/.emacs:

#+BEGIN_SRC emacs-lisp :results silent
   (auto-indent-global-mode)
#+END_SRC


Excluded modes are defined in =auto-indent-disabled-modes-list=

If you only want this on for a single mode, you would add the following to
~/.emacs

#+BEGIN_SRC emacs-lisp :results silent
  (add-hook 'emacs-lisp-mode-hook 'auto-indent-minor-mode)
#+END_SRC


You could always turn on the minor mode with the command
=auto-indent-minor-mode=
* Setting the number of spaces for indenting major modes
While this is controlled by the major mode, as a convenience,
auto-indent-mode attempts to set the default number of spaces for an
indentation for specific major mode.  

This is done by:
1. Making local variables of all the variables specified in
   =auto-indent-known-indent-level-variables= and setting them to
   auto-indent's =auto-indent-assign-indent-level=
2. Looking to see if major mode variables
   =major-mode-indent-level= and =major-mode-basic-offset= variables
   are present.  If either of these variables are present,
   =auto-indent-mode= sets these variables to the default
   =auto-indent-assign-indent-level=.   

* TextMate Meta-Return behavior
If you would like TextMate behavior of Meta-RETURN going to the
end of the line and then inserting a newline, as well as
Meta-shift return going to the end of the line, inserting a
semi-colon then inserting a newline, use the following:

#+BEGIN_SRC emacs-lisp :results silent
  (setq auto-indent-key-for-end-of-line-then-newline "<M-return>")
  (setq auto-indent-key-for-end-of-line-insert-char-then-newline "<M-S-return>")
  (require 'auto-indent-mode)
  (auto-indent-global-mode)
#+END_SRC

This may or may not work on your system.  Many times emacs cannot
distinguish between M-RET and M-S-RET, so if you don't mind a
slight redefinition use:

#+BEGIN_SRC emacs-lisp :results silent
  (setq auto-indent-key-for-end-of-line-then-newline "<M-return>")
  (setq auto-indent-key-for-end-of-line-insert-char-then-newline "<C-M-return>")
  (require 'auto-indent-mode)
  (auto-indent-global-mode)
#+END_SRC

If you want to insert something other than a semi-colon (like a
colon) in a specific mode, say colon-mode, do the following:

#+BEGIN_SRC emacs-lisp :results silent
  (add-hook 'colon-mode-hook (lambda () (setq auto-indent-eol-char ":")))
#+END_SRC
* Notes about autopair-mode and yasnippet compatibility
If you wish to use this with autopairs and yasnippet, please load
this library first.
* Using specific functions from auto-indent-mode

Also if you wish to just use specific functions from this library
that is possible as well.

To have the auto-indentation-paste use:

#+BEGIN_SRC emacs-lisp :results silent
  (autoload 'auto-indent-yank "auto-indent-mode" "" t)
  (autoload 'auto-indent-yank-pop "auto-indent-mode" "" t)
  
  (define-key global-map [remap yank] 'auto-indent-yank)
  (define-key global-map [remap yank-pop] 'auto-indent-yank-pop)
  
  (autoload 'auto-indent-delete-char "auto-indent-mode" "" t)
  (define-key global-map [remap delete-char] 'auto-indent-delete-char)
  
  (autoload 'auto-indent-kill-line "auto-indent-mode" "" t)
  (define-key global-map [remap kill-line] 'auto-indent-kill-line)
  
#+END_SRC


However, this does not honor the excluded modes in
=auto-indent-disabled-modes-list=


* Making certain modes perform tasks on paste/yank.
Sometimes, like in R, it is convenient to paste c:\ and change it to
c:/.  This can be accomplished by modifying the
=auto-indent-after-yank-hook=.

The code for changing the paths is as follows:  

#+BEGIN_SRC emacs-lisp
(defun kicker-ess-fix-path (beg end)
    "Fixes ess path"
    (save-restriction
      (save-excursion
        (narrow-to-region beg end)
        (goto-char (point-min))
        (when (looking-at "[A-Z]:\\\\")
          (while (search-forward "\\" nil t)
            (replace-match "/"))))))
  
  (defun kicker-ess-turn-on-fix-path ()
    (interactive)
    (when (string= "S" ess-language)
      (add-hook 'auto-indent-after-yank-hook 'kicker-ess-fix-path t t)))
  (add-hook 'ess-mode-hook 'kicker-ess-turn-on-fix-path)
#+END_SRC

Another R-hack is to take of the ">" and "+" of a command line
copy. For example copying:

: > ## set up
: > availDists <- c(Normal="rnorm", Exponential="rexp")
: > availKernels <- c("gaussian", "epanechnikov", "rectangular",
: + "triangular", "biweight", "cosine", "optcosine")


Should give the following code on paste:

: ## set up
: availDists <- c(Normal="rnorm", Exponential="rexp")
: availKernels <- c("gaussian", "epanechnikov", "rectangular",
: "triangular", "biweight", "cosine", "optcosine")


This is setup by the following code snippet:

#+BEGIN_SRC emacs-lisp
  (defun kicker-ess-fix-code (beg end)
    "Fixes ess path"
    (save-restriction
      (save-excursion
        (save-match-data
          (narrow-to-region beg end)
          (goto-char (point-min))
          (while (re-search-forward "^[ \t]*[>][ \t]+" nil t)
            (replace-match "")
            (goto-char (point-at-eol))
            (while (looking-at "[ \t\n]*[+][ \t]+")
              (replace-match "\n")
              (goto-char (point-at-eol))))))))
  
  (defun kicker-ess-turn-on-fix-code ()
    (interactive)
    (when (string= "S" ess-language)
      (add-hook 'auto-indent-after-yank-hook 'kicker-ess-fix-code t t)))
  (add-hook 'ess-mode-hook 'kicker-ess-turn-on-fix-code)
  
#+END_SRC

* FAQ
** Why isn't my mode indenting?
Some modes are excluded for compatability reasons, such as
text-modes.  This is controlled by the variable
=auto-indent-disabled-modes-list=
** Why isn't my specific mode have the right number of spaces?
Actually, the number of spaces for indentation is controlled by the
major mode. If there is a major-mode specific variable that controls
this offset, you can add this variable to
=auto-indent-known-indent-level-variables= to change the indentation
for this mode when auto-indent-mode starts.

See:

- [[http://www.pement.org/emacs_tabs.htm][Understanding GNU Emacs and tabs]]
- [[http://kb.iu.edu/data/abde.html][In Emacs how can I change tab sizes?]]


* Functions
** Interactive Functions

*** auto-indent-deactivate-advices
=(auto-indent-deactivate-advices)=

Deactivate Advices for =auto-indent-mode=.

*** auto-indent-eol-char-newline
It is bound to <M-S-return>.

=(auto-indent-eol-char-newline)=

* Auto-indent function for =end-of-line=, insert =auto-indent-eol-char=, and then newline.

*** auto-indent-eol-newline
It is bound to <M-return>.

=(auto-indent-eol-newline)=

*Auto-indent function for =end-of-line= and then newline.

*** auto-indent-minor-mode-on
=(auto-indent-minor-mode-on)=

* Turn on auto-indent minor mode.

*** auto-indent-whole-buffer
=(auto-indent-whole-buffer &optional SAVE)=

Auto-indent whole buffer and untabify it.

If SAVE is specified, save the buffer after indenting the entire
buffer.

** Internal Functions

*** auto-indent-add-to-alist
=(auto-indent-add-to-alist ALIST-VAR ELT-CONS &optional NO-REPLACE)=

Add to the value of ALIST-VAR an element ELT-CONS if it isn't there yet.
If an element with the same car as the car of ELT-CONS is already present,
replace it with ELT-CONS unless NO-REPLACE is non-nil; if a matching
element is not already present, add ELT-CONS to the front of the alist.
The test for presence of the car of ELT-CONS is done with =equal=.

*** auto-indent-bolp
=(auto-indent-bolp)=

Return t if point is at bol respecting =auto-indent-use-text-boundaries=.

*** auto-indent-deindent-last-kill
=(auto-indent-deindent-last-kill)=

Strips out indentation in the last kill.

*** auto-indent-eolp
=(auto-indent-eolp)=

Return t if point is at eol respecting =auto-indent-use-text-boundaries=.

*** auto-indent-file-when-save
=(auto-indent-file-when-save)=

* Auto-indent file when save.

*** auto-indent-file-when-visit
=(auto-indent-file-when-visit)=

* auto-indent file when visit.

*** auto-indent-handle-end-of-line
=(auto-indent-handle-end-of-line LST &optional ADD)=

Handle end of line operations.

LST is the list of regular expressions to consider.

ADD lets =auto-indent-mode= know that it should add a space instead.

*** auto-indent-is-bs-key-p
=(auto-indent-is-bs-key-p &optional COMMAND)=

Determines if the backspace key was =this-command= or COMMAND.

*** auto-indent-is-del-key-p
=(auto-indent-is-del-key-p &optional COMMAND)=

Determines if the delete key was =this-command= or COMMAND.

This is based on standards for Viper, ErgoEmacs and standard Emacs

*** auto-indent-is-kill-line-p
=(auto-indent-is-kill-line-p &optional COMMAND)=

Determines if the =kill-line= was either =this-command= or COMMAND.

This is based on standards for Viper, ErgoEmacs and standard
Emacs

*** auto-indent-is-kill-region-p
=(auto-indent-is-kill-region-p &optional COMMAND)=

Determines if the kill region/cut was =this-command= or COMMAND.

This is based on standards for viper, ergoemacs and standard Emacs.

*** auto-indent-is-kill-ring-save-p
=(auto-indent-is-kill-ring-save-p &optional COMMAND)=

Determines if =kill-ring-save= was called in =this-command= or COMMAND.

This is based on standards for viper, ergoemacs and standard Emacs.

*** auto-indent-is-prog-mode-p
=(auto-indent-is-prog-mode-p)=

Determines if this mode is a programming mode.

*** auto-indent-is-yank-p
=(auto-indent-is-yank-p &optional COMMAND)=

Test if the =this-command= or COMMAND was a yank.

*** auto-indent-mode-post-command-hook
=(auto-indent-mode-post-command-hook)=

Post-command hook for =auto-indent-mode=.

Allows auto-indent-mode to go to the right place when moving
around and the whitespace was deleted from the line.

*** auto-indent-mode-post-command-hook-last
=(auto-indent-mode-post-command-hook-last)=

Last =post-command-hook= run.

Last hook run to take care of auto-indenting that needs to be
performed after all other post-command hooks have run (like sexp
auto-indenting)

*** auto-indent-mode-pre-command-hook
=(auto-indent-mode-pre-command-hook)=

Hook for =auto-indent-mode= to tell if the point has been moved.

*** auto-indent-original-binding
=(auto-indent-original-binding KEY)=

Gets the original key binding for a specified KEY.

*** auto-indent-par-region
=(auto-indent-par-region)=

Indent a parenthetical region (based on a timer).

*** auto-indent-par-region-interval
=(auto-indent-par-region-interval &optional INTERVAL DIV)=

Gets the interval based on =auto-indent-next-pair-timer-interval=. 
If INTERVAL is pre-specified, than don't look up the interval.  If
DIV is specified divide by the number of lines instead of
multiply by the number of lines and then save the division.

*** auto-indent-point-inside-pairs-p
=(auto-indent-point-inside-pairs-p)=

Is point inside any pairs?

*** auto-indent-remove-advice-p
=(auto-indent-remove-advice-p &optional COMMAND)=

Should the advice be removed?

This is based on either the current command (=this-command=) or
the provided COMMAND.  Removes advice if the function called is
actually an auto-indent function OR it should be disabled in this
mode.

*** auto-indent-save-par-region-interval
=(auto-indent-save-par-region-interval)=

Saves =auto-indent-next-pair-timer-interval=.

*** auto-indent-setup-map
=(auto-indent-setup-map)=

* Set up minor mode map.

*** auto-indent-turn-on-org-indent
=(auto-indent-turn-on-org-indent)=

Turn on org-indent.

*** auto-indent-yank-engine
=(auto-indent-yank-engine)=

Engine for the auto-indent yank functions/advices.

*** kicker-ess-fix-code
=(kicker-ess-fix-code BEG END)=

Fixes ess path

*** kicker-ess-fix-path
=(kicker-ess-fix-path BEG END)=

Fixes ess path
* Auto-indent function for =end-of-line=, insert =auto-indent-eol-char=, and then newline.

*** auto-indent-eol-newline
It is bound to <M-return>.

=(auto-indent-eol-newline)=

*Auto-indent function for =end-of-line= and then newline.

*** auto-indent-minor-mode-on
=(auto-indent-minor-mode-on)=

* Turn on auto-indent minor mode.

*** auto-indent-whole-buffer
=(auto-indent-whole-buffer &optional SAVE)=

Auto-indent whole buffer and untabify it.

If SAVE is specified, save the buffer after indenting the entire
buffer.

** Internal Functions

*** auto-indent-add-to-alist
=(auto-indent-add-to-alist ALIST-VAR ELT-CONS &optional NO-REPLACE)=

Add to the value of ALIST-VAR an element ELT-CONS if it isn't there yet.
If an element with the same car as the car of ELT-CONS is already present,
replace it with ELT-CONS unless NO-REPLACE is non-nil; if a matching
element is not already present, add ELT-CONS to the front of the alist.
The test for presence of the car of ELT-CONS is done with =equal=.

*** auto-indent-bolp
=(auto-indent-bolp)=

Return t if point is at bol respecting =auto-indent-use-text-boundaries=.

*** auto-indent-deindent-last-kill
=(auto-indent-deindent-last-kill)=

Strips out indentation in the last kill.

*** auto-indent-eolp
=(auto-indent-eolp)=

Return t if point is at eol respecting =auto-indent-use-text-boundaries=.

*** auto-indent-file-when-save
=(auto-indent-file-when-save)=

* Auto-indent file when save.

*** auto-indent-file-when-visit
=(auto-indent-file-when-visit)=

* auto-indent file when visit.

*** auto-indent-handle-end-of-line
=(auto-indent-handle-end-of-line LST &optional ADD)=

Handle end of line operations.

LST is the list of regular expressions to consider.

ADD lets =auto-indent-mode= know that it should add a space instead.

*** auto-indent-is-bs-key-p
=(auto-indent-is-bs-key-p &optional COMMAND)=

Determines if the backspace key was =this-command= or COMMAND.

*** auto-indent-is-del-key-p
=(auto-indent-is-del-key-p &optional COMMAND)=

Determines if the delete key was =this-command= or COMMAND.

This is based on standards for Viper, ErgoEmacs and standard Emacs

*** auto-indent-is-kill-line-p
=(auto-indent-is-kill-line-p &optional COMMAND)=

Determines if the =kill-line= was either =this-command= or COMMAND.

This is based on standards for Viper, ErgoEmacs and standard
Emacs

*** auto-indent-is-kill-region-p
=(auto-indent-is-kill-region-p &optional COMMAND)=

Determines if the kill region/cut was =this-command= or COMMAND.

This is based on standards for viper, ergoemacs and standard Emacs.

*** auto-indent-is-kill-ring-save-p
=(auto-indent-is-kill-ring-save-p &optional COMMAND)=

Determines if =kill-ring-save= was called in =this-command= or COMMAND.

This is based on standards for viper, ergoemacs and standard Emacs.

*** auto-indent-is-prog-mode-p
=(auto-indent-is-prog-mode-p)=

Determines if this mode is a programming mode.

*** auto-indent-is-yank-p
=(auto-indent-is-yank-p &optional COMMAND)=

Test if the =this-command= or COMMAND was a yank.

*** auto-indent-mode-post-command-hook
=(auto-indent-mode-post-command-hook)=

Post-command hook for =auto-indent-mode=.

Allows auto-indent-mode to go to the right place when moving
around and the whitespace was deleted from the line.

*** auto-indent-mode-post-command-hook-last
=(auto-indent-mode-post-command-hook-last)=

Last =post-command-hook= run.

Last hook run to take care of auto-indenting that needs to be
performed after all other post-command hooks have run (like sexp
auto-indenting)

*** auto-indent-mode-pre-command-hook
=(auto-indent-mode-pre-command-hook)=

Hook for =auto-indent-mode= to tell if the point has been moved.

*** auto-indent-original-binding
=(auto-indent-original-binding KEY)=

Gets the original key binding for a specified KEY.

*** auto-indent-par-region
=(auto-indent-par-region)=

Indent a parenthetical region (based on a timer).

*** auto-indent-par-region-interval
=(auto-indent-par-region-interval &optional INTERVAL DIV)=

Gets the interval based on =auto-indent-next-pair-timer-interval=. 
If INTERVAL is pre-specified, than don't look up the interval.  If
DIV is specified divide by the number of lines instead of
multiply by the number of lines and then save the division.

*** auto-indent-point-inside-pairs-p
=(auto-indent-point-inside-pairs-p)=

Is point inside any pairs?

*** auto-indent-remove-advice-p
=(auto-indent-remove-advice-p &optional COMMAND)=

Should the advice be removed?

This is based on either the current command (=this-command=) or
the provided COMMAND.  Removes advice if the function called is
actually an auto-indent function OR it should be disabled in this
mode.

*** auto-indent-save-par-region-interval
=(auto-indent-save-par-region-interval)=

Saves =auto-indent-next-pair-timer-interval=.

*** auto-indent-setup-map
=(auto-indent-setup-map)=

* Set up minor mode map.

*** auto-indent-turn-on-org-indent
=(auto-indent-turn-on-org-indent)=

Turn on org-indent.

*** auto-indent-yank-engine
=(auto-indent-yank-engine)=

Engine for the auto-indent yank functions/advices.

*** kicker-ess-fix-code
=(kicker-ess-fix-code BEG END)=

Fixes ess path

*** kicker-ess-fix-path
=(kicker-ess-fix-path BEG END)=

Fixes ess path
* Variables
** Customizable Variables

*** auto-indent-after-yank-hook
Hooks to run after auto-indent's yank.  The arguments sent to the function should be the two points in the yank.

*** auto-indent-alternate-return-function-for-end-of-line-then-newline
Defines an alternate return function smart returns.
This allows a different function to take over for the
end-of-line-then newline.  This is useful in =R-mode=, where you can
make this send the current line to the R buffer, if you wish.

*** auto-indent-assign-indent-level
Indent level assigned when an indent-level variable is found.

*** auto-indent-assign-indent-level-variables
Attempt to assign =auto-indent-known-indent-level-variables= as local variables.
If the major mode has =major-mode-indent-level=, =major-indent-level=, =major-mode-basic-offset=, or
=major-basic-offset= then attempt to set that variable as well.

*** auto-indent-backward-delete-char-behavior
Backspace behavior when =auto-indent-mode= is enabled.
Based on =backward-delete-char-untabify-method=

Currently, this can be:

- =untabify= -- turn a tab to many spaces, then delete one space;
- =hungry= -- delete all whitespace, both tabs and spaces;
- =all= -- delete all whitespace, including tabs, spaces and newlines;
- nil -- just delete one character.

*** auto-indent-blank-lines-on-move
*Auto indentation on moving cursor to blank lines.

*** auto-indent-current-pairs
* Automatically indent the current parenthetical statement.

*** auto-indent-delete-line-char-add-extra-spaces
* When deleting a return, add a space (when appropriate)
between the newly joined lines.

This takes care of the condition when deleting text

Lorem ipsum dolor sit|
amet, consectetur adipiscing elit.  Morbi id

Lorem ipsum dolor sit|amet, consectetur adipiscing elit.  Morbi id

Which ideally should be deleted to:

Lorem ipsum dolor sit| amet, consectetur adipiscing elit.  Morbi id

This is controlled by the regular expressions in
=auto-indent-delete-line-char-add-extra-spaces-prog-mode-regs=
and
=auto-indent-delete-line-char-add-extra-spaces-text-mode-regs=

*** auto-indent-delete-line-char-add-extra-spaces-prog-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-add-extra-spaces=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-add-extra-spaces-text-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-add-extra-spaces=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-remove-extra-spaces
When deleting a return, delete any extra spaces between the newly joined lines.

*** auto-indent-delete-line-char-remove-last-space
Remove last space when deleting a line.

When =auto-indent-delete-line-char-remove-extra-spaces= is enabled,
expressions like lists can be removed in a less than optimal
manner.  For example, assuming =`|=' is the cursor:

c("Vehicle QD TO",|
     "1 ug IVT","3 ug IVT",...

would be deleted to the following

c("Vehicle QD TO",| "1 ug IVT","3 ug IVT",...

In this case it would be preferable to delete to:

c("Vehicle QD TO",|"1 ug IVT","3 ug IVT",...

However cases like sentences:

Lorem ipsum dolor sit amet,|
     consectetur adipiscing elit. Morbi id

Deletes to
Lorem ipsum dolor sit amet,| consectetur adipiscing elit. Morbi id

Which is a desired behavior.

When this is enabled, auto-indent attempts to be smarter by
deleting the extra space when characters before and after match
expressions defined in
=auto-indent-delete-line-char-remove-last-space-prog-mode-regs= and
=auto-indent-delete-line-char-remove-last-space-text-mode-regs=.

*** auto-indent-delete-line-char-remove-last-space-prog-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-remove-last-space=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-remove-last-space-text-mode-regs
Regular expressions for use with =auto-indent-delete-line-char-remove-last-space=.  This is used for modes other than programming modes.  This is determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-trailing-whitespace-on-save-file
* When saving file delete trailing whitespace.

*** auto-indent-delete-trailing-whitespace-on-visit-file
* Automatically remove trailing whitespace when visiting  file.

*** auto-indent-disabled-indent-functions
List of disabled indent functions.

List of functions that auto-indent ignores the =indent-region= on
paste and automated indent by pressing return.  The default is
=indent-relative= and =indent-relative-maybe=.  If these are used the
indentation is may not specified for the current mode.

*** auto-indent-disabled-modes-list
List of modes disabled when global =auto-indent-mode= is on.

*** auto-indent-disabled-modes-on-save
* List of modes where =indent-region= of the whole file is ignored.

*** auto-indent-engine
Type of engine to use.  The possibilities are:

default: Use hooks and advices to implement auto-indent-mode

keymap: Use key remappings to implement auto-indent-mode.  This may
work in some modes but may cause things such as =company-mode= or
=auto-complete-mode= to function improperly

*** auto-indent-eol-char
End of line/statement character, like C or matlab's semi-colon.

Character inserted when
=auto-indent-key-for-end-of-line-inser-char-then-newline= is
defined.  This is a buffer local variable, therefore if you have
a mode that instead of using a semi-colon for an end of
statement, you use a colon, this can be added to the mode as
follows:

     (add-hook 'strange-mode-hook (lambda() (setq auto-indent-eol-char ":")))

autoThis is similar to Textmate's behavior.  This is useful when used
in conjunction with something that pairs delimiters like =autopair-mode=.

*** auto-indent-force-interactive-advices
Forces interactive advices.

This makes sure that this is called when this is an interactive
call directly to the function.  However, if someone defines
something such as =org-delete-char= to delete a character, when
=org-delete-char= is called interactively and then calls
=delete-char= the advice is never activated (when it should be).
If this is activated, =auto-indent-mode= tries to do the right
thing by guessing what key should have been pressed to get this
event.  If it is the key that was pressed enable the advice.

*** auto-indent-home-is-beginning-of-indent
The Home key, or rather the =move-beginning-of-line= function, will move to the beginning of the indentation when called interactively.  If it is already at the beginning of the indent, move to the beginning of the line.

*** auto-indent-home-is-beginning-of-indent-when-spaces-follow
This is a customization for the home key.

If =auto-indent-home-is-beginning-of-indent= is enabled, the Home
key, or rather the =move-beginning-of-line= function, will move
to the beginning of the indentation when called interactively.

If it is already at the beginning of the indent,and move to the
beginning of the line.  When
=auto-indent-home-is-beginning-of-indent-when-spaces-follow= is
enabled, a home key press from

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
    | (let (at-beginning)

will change to

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
      |(let (at-beginning)

Another home-key will chang to cursor

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
|   (let (at-beginning)

*** auto-indent-key-for-end-of-line-insert-char-then-newline
Key for end of line, =auto-indent-eol-char=, then newline.

By default the =auto-indent-eol-char= is the semicolon. TextMate
uses shift-meta return, I believe (S-M-RET). If blank, no key is
defined.  The key should be in a format used for having keyboard
macros (see =edmacro-mode=). This is useful when used in
conjunction with something that pairs delimiters like
=autopair-mode=.

*** auto-indent-key-for-end-of-line-then-newline
Key for end of line, then newline.

TextMate uses meta return, I believe (M-RET).  If blank, no key
is defined. The key should be in a format used for saving
keyboard macros (see =edmacro-mode=). This is useful when used in
conjunction with something that pairs delimiters like =autopair-mode=.

*** auto-indent-kill-line-at-eol
Determines how a kill at the end of line behaves.

When killing lines, if at the end of a line,

nil - join next line to the current line.  Deletes white-space at
         join.  [this essentially duplicated delete-char]

         See also =auto-indent-kill-remove-extra-spaces=

whole-line - kill next lines

subsequent-whole-lines - merge lines on first call, subsequent kill whole lines

blanks - kill all empty lines after the current line, and then
            any lines specified.

You should also set the function =kill-whole-line= to do what you
want.

*** auto-indent-kill-line-kill-region-when-active
* When killing lines, if region is active, kill region instead.

*** auto-indent-kill-remove-extra-spaces
* Remove indentation before killing the line or region.

*** auto-indent-known-indent-level-variables
Known indent-level-variables for major modes.  Set locally when auto-indent-mode initializes.

*** auto-indent-known-text-modes
* List of auto-indent's known text-modes.

*** auto-indent-minor-mode-symbol
* When true, Auto Indent puts AI on the mode line.

*** auto-indent-mode-untabify-on-yank-or-paste
* Untabify pasted or yanked region.

*** auto-indent-newline-function
* Auto indentation function for the return key.

*** auto-indent-next-pair
Automatically indent the next parenthetical statement.  For example in R:

d| <- read.csv("dat.csv",
                  na.strings=c(".","NA"))

When typing .old, the indentation will be updated as follows:

d.old <- read.csv("dat.csv",
                     na.strings=c(".","NA"))

This will slow down your computation, so if you use it make sure
that the =auto-indent-next-pair-timer-interval= is appropriate
for your needs.

It is useful when using this option to have some sort of autopairing on.

*** auto-indent-next-pair-timer-interval
Number of seconds before the observed parenthetical statement is indented.
The faster the value, the slower Emacs responsiveness but the
faster Emacs indents the region.  The slower the value, the
faster Emacs responds.  This should be changed dynamically by
typing with =auto-indent-next-pair-timer-interval-addition=.  The
maximum that a particular mode can delay the timer is given by
=auto-indent-next-pair-timer-interval-max=.

*** auto-indent-next-pair-timer-interval-addition
If the indent operation for a file takes longer than the specified idle timer, grow that timer by this number for a particular mode.

*** auto-indent-next-pair-timer-interval-max
Maximum number seconds that auto-indent-mode will grow a parenthetical statement.
If this is less than or equal to zero, these will be no limit.

*** auto-indent-next-pairt-timer-interval-do-not-grow
If true, do not magically grow the mode-based indent time for a region.

*** auto-indent-on-save-file
* Auto Indent on visit file.

*** auto-indent-on-visit-file
* Auto Indent file upon visit.

*** auto-indent-on-visit-pretend-nothing-changed
* When modifying the file on visit, pretend nothing changed.

*** auto-indent-on-yank-or-paste
* Indent pasted or yanked region.

*** auto-indent-start-org-indent
Starts =org-indent-mode= when in org-mode.

*** auto-indent-untabify-on-save-file
* Change tabs to spaces on file-save.

*** auto-indent-untabify-on-visit-file
* Automatically convert tabs into spaces when visiting a file.

*** auto-indent-use-text-boundaries
Use text boundaries when killing lines.

When killing lines, if point is before any text, act as if
point is at BOL.  And if point is after text, act as if point
     is at EOL

** Internal Variables

*** auto-indent-eol-ret-save
Saved variable for keyboard state.

*** auto-indent-eol-ret-semi-save
Saved variable for keyboard state.

*** auto-indent-minor-mode-map
* Auto Indent mode map.

*** auto-indent-pairs-begin
Defines where the pair region begins.

*** auto-indent-pairs-end
Defines where the pair region ends.
*Auto indentation on moving cursor to blank lines.

*** auto-indent-current-pairs
* Automatically indent the current parenthetical statement.

*** auto-indent-delete-line-char-add-extra-spaces
* When deleting a return, add a space (when appropriate)
between the newly joined lines.

This takes care of the condition when deleting text

Lorem ipsum dolor sit|
amet, consectetur adipiscing elit.  Morbi id

Lorem ipsum dolor sit|amet, consectetur adipiscing elit.  Morbi id

Which ideally should be deleted to:

Lorem ipsum dolor sit| amet, consectetur adipiscing elit.  Morbi id

This is controlled by the regular expressions in
=auto-indent-delete-line-char-add-extra-spaces-prog-mode-regs=
and
=auto-indent-delete-line-char-add-extra-spaces-text-mode-regs=

*** auto-indent-delete-line-char-add-extra-spaces-prog-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-add-extra-spaces=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-add-extra-spaces-text-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-add-extra-spaces=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-remove-extra-spaces
When deleting a return, delete any extra spaces between the newly joined lines.

*** auto-indent-delete-line-char-remove-last-space
Remove last space when deleting a line.

When =auto-indent-delete-line-char-remove-extra-spaces= is enabled,
expressions like lists can be removed in a less than optimal
manner.  For example, assuming =`|=' is the cursor:

c("Vehicle QD TO",|
     "1 ug IVT","3 ug IVT",...

would be deleted to the following

c("Vehicle QD TO",| "1 ug IVT","3 ug IVT",...

In this case it would be preferable to delete to:

c("Vehicle QD TO",|"1 ug IVT","3 ug IVT",...

However cases like sentences:

Lorem ipsum dolor sit amet,|
     consectetur adipiscing elit. Morbi id

Deletes to
Lorem ipsum dolor sit amet,| consectetur adipiscing elit. Morbi id

Which is a desired behavior.

When this is enabled, auto-indent attempts to be smarter by
deleting the extra space when characters before and after match
expressions defined in
=auto-indent-delete-line-char-remove-last-space-prog-mode-regs= and
=auto-indent-delete-line-char-remove-last-space-text-mode-regs=.

*** auto-indent-delete-line-char-remove-last-space-prog-mode-regs
* Regular expressions for use with =auto-indent-delete-line-char-remove-last-space=.  This is used for programming modes as determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-line-char-remove-last-space-text-mode-regs
Regular expressions for use with =auto-indent-delete-line-char-remove-last-space=.  This is used for modes other than programming modes.  This is determined by =auto-indent-is-prog-mode-p=.

*** auto-indent-delete-trailing-whitespace-on-save-file
* When saving file delete trailing whitespace.

*** auto-indent-delete-trailing-whitespace-on-visit-file
* Automatically remove trailing whitespace when visiting  file.

*** auto-indent-disabled-indent-functions
List of disabled indent functions.

List of functions that auto-indent ignores the =indent-region= on
paste and automated indent by pressing return.  The default is
=indent-relative= and =indent-relative-maybe=.  If these are used the
indentation is may not specified for the current mode.

*** auto-indent-disabled-modes-list
List of modes disabled when global =auto-indent-mode= is on.

*** auto-indent-disabled-modes-on-save
* List of modes where =indent-region= of the whole file is ignored.

*** auto-indent-engine
Type of engine to use.  The possibilities are:

default: Use hooks and advices to implement auto-indent-mode

keymap: Use key remappings to implement auto-indent-mode.  This may
work in some modes but may cause things such as =company-mode= or
=auto-complete-mode= to function improperly

*** auto-indent-eol-char
End of line/statement character, like C or matlab's semi-colon.

Character inserted when
=auto-indent-key-for-end-of-line-inser-char-then-newline= is
defined.  This is a buffer local variable, therefore if you have
a mode that instead of using a semi-colon for an end of
statement, you use a colon, this can be added to the mode as
follows:

     (add-hook 'strange-mode-hook (lambda() (setq auto-indent-eol-char ":")))

autoThis is similar to Textmate's behavior.  This is useful when used
in conjunction with something that pairs delimiters like =autopair-mode=.

*** auto-indent-force-interactive-advices
Forces interactive advices.

This makes sure that this is called when this is an interactive
call directly to the function.  However, if someone defines
something such as =org-delete-char= to delete a character, when
=org-delete-char= is called interactively and then calls
=delete-char= the advice is never activated (when it should be).
If this is activated, =auto-indent-mode= tries to do the right
thing by guessing what key should have been pressed to get this
event.  If it is the key that was pressed enable the advice.

*** auto-indent-home-is-beginning-of-indent
The Home key, or rather the =move-beginning-of-line= function, will move to the beginning of the indentation when called interactively.  If it is already at the beginning of the indent, move to the beginning of the line.

*** auto-indent-home-is-beginning-of-indent-when-spaces-follow
This is a customization for the home key.

If =auto-indent-home-is-beginning-of-indent= is enabled, the Home
key, or rather the =move-beginning-of-line= function, will move
to the beginning of the indentation when called interactively.

If it is already at the beginning of the indent,and move to the
beginning of the line.  When
=auto-indent-home-is-beginning-of-indent-when-spaces-follow= is
enabled, a home key press from

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
    | (let (at-beginning)

will change to

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
      |(let (at-beginning)

Another home-key will chang to cursor

    (defadvice move-beginning-of-line (around auto-indent-minor-mode-advice)
|   (let (at-beginning)

*** auto-indent-key-for-end-of-line-insert-char-then-newline
Key for end of line, =auto-indent-eol-char=, then newline.

By default the =auto-indent-eol-char= is the semicolon. TextMate
uses shift-meta return, I believe (S-M-RET). If blank, no key is
defined.  The key should be in a format used for having keyboard
macros (see =edmacro-mode=). This is useful when used in
conjunction with something that pairs delimiters like
=autopair-mode=.

*** auto-indent-key-for-end-of-line-then-newline
Key for end of line, then newline.

TextMate uses meta return, I believe (M-RET).  If blank, no key
is defined. The key should be in a format used for saving
keyboard macros (see =edmacro-mode=). This is useful when used in
conjunction with something that pairs delimiters like =autopair-mode=.

*** auto-indent-kill-line-at-eol
Determines how a kill at the end of line behaves.

When killing lines, if at the end of a line,

nil - join next line to the current line.  Deletes white-space at
         join.  [this essentially duplicated delete-char]

         See also =auto-indent-kill-remove-extra-spaces=

whole-line - kill next lines

subsequent-whole-lines - merge lines on first call, subsequent kill whole lines

blanks - kill all empty lines after the current line, and then
            any lines specified.

You should also set the function =kill-whole-line= to do what you
want.

*** auto-indent-kill-line-kill-region-when-active
* When killing lines, if region is active, kill region instead.

*** auto-indent-kill-remove-extra-spaces
* Remove indentation before killing the line or region.

*** auto-indent-known-indent-level-variables
Known indent-level-variables for major modes.  Set locally when auto-indent-mode initializes.

*** auto-indent-known-text-modes
* List of auto-indent's known text-modes.

*** auto-indent-minor-mode-symbol
* When true, Auto Indent puts AI on the mode line.

*** auto-indent-mode-untabify-on-yank-or-paste
* Untabify pasted or yanked region.

*** auto-indent-newline-function
* Auto indentation function for the return key.

*** auto-indent-next-pair
Automatically indent the next parenthetical statement.  For example in R:

d| <- read.csv("dat.csv",
                  na.strings=c(".","NA"))

When typing .old, the indentation will be updated as follows:

d.old <- read.csv("dat.csv",
                     na.strings=c(".","NA"))

This will slow down your computation, so if you use it make sure
that the =auto-indent-next-pair-timer-interval= is appropriate
for your needs.

It is useful when using this option to have some sort of autopairing on.

*** auto-indent-next-pair-timer-interval
Number of seconds before the observed parenthetical statement is indented.
The faster the value, the slower Emacs responsiveness but the
faster Emacs indents the region.  The slower the value, the
faster Emacs responds.  This should be changed dynamically by
typing with =auto-indent-next-pair-timer-interval-addition=

*** auto-indent-next-pair-timer-interval-addition
If the indent operation for a file takes longer than the specified idle timer, grow that timer by this number for a particular mode.

*** auto-indent-next-pairt-timer-interval-do-not-grow
If true, do not magically grow the mode-based indent time for a region.

*** auto-indent-on-save-file
* Auto Indent on visit file.

*** auto-indent-on-visit-file
* Auto Indent file upon visit.

*** auto-indent-on-visit-pretend-nothing-changed
* When modifying the file on visit, pretend nothing changed.

*** auto-indent-on-yank-or-paste
* Indent pasted or yanked region.

*** auto-indent-start-org-indent
Starts =org-indent-mode= when in org-mode.

*** auto-indent-untabify-on-save-file
* Change tabs to spaces on file-save.

*** auto-indent-untabify-on-visit-file
* Automatically convert tabs into spaces when visiting a file.

*** auto-indent-use-text-boundaries
Use text boundaries when killing lines.

When killing lines, if point is before any text, act as if
point is at BOL.  And if point is after text, act as if point
     is at EOL

** Internal Variables

*** auto-indent-eol-ret-save
Saved variable for keyboard state.

*** auto-indent-eol-ret-semi-save
Saved variable for keyboard state.

*** auto-indent-minor-mode-map
* Auto Indent mode map.

*** auto-indent-pairs-begin
Defines where the pair region begins.

*** auto-indent-pairs-end
Defines where the pair region ends.
* History

 - 21-Aug-2012 ::  Added =auto-indent-next-pair-timer-interval-max= and a bug fix to the interval-growth algorithm. (Matthew L. Fidler)
 - 21-Aug-2012 ::  Attempt to change documentation. (Matthew L. Fidler)
 - 21-Aug-2012 ::  Changed the default =auto-indent-next-pairt-timer-interval-do-not-grow= to nil.  (Matthew L. Fidler)
 - 20-Aug-2012 ::  Drop Readme.md (Matthew L. Fidler)
 - 20-Aug-2012 ::  Another documentation revision. (Matthew L. Fidler)
 - 20-Aug-2012 ::  Documentation update. (Matthew L. Fidler)
 - 20-Aug-2012 ::  Added a generic function to change the number of spaces for an indentation. Should fix issue #4. (Matthew L. Fidler)
 - 20-Aug-2012 ::  Clarified documentation (Matthew L. Fidler)
 - 20-Aug-2012 ::  Added some documentation about major mode indentation issues. 7-Aug-2012 Matthew L. Fidler Last-Updated: Tue Aug 21 12:50:09 2012 (-0500)
 - 04-Aug-2012 ::  Added ability to turn off dynamic growth of timers per mode. The algorithm to change has not been perfected yet. (Matthew L. Fidler)
 - 04-Aug-2012 ::  Fixed a bug introduced by cleaning typos. Changing again. (Matthew L. Fidler)
 - 03-Aug-2012 ::  Save indentation settings on exit emacs. (Matthew L. Fidler)
 - 03-Aug-2012 ::  Fixed Documentation, and a few minor bugs caught by linting. (Matthew L. Fidler)
 - 30-Jul-2012 ::  Made the Fix for issue #3 more specific to org tables. (Matthew L. Fidler)
 - 30-Jul-2012 ::  Actual Fix for Issue #3. Now the delete character may not work in org-mode. (Matthew L. Fidler)
 - 23-Jul-2012 ::  Fix Issue #3. Thanks harrylove for pointing it out. (Matthew L. Fidler)
 - 02-Jul-2012 ::  Have an mode-based timer normalized to the number of lines used for next parenthetical indentation. (Matthew L. Fidler)
 - 26-Jun-2012 ::  Bug fix for point-shift involved in =auto-indent-after-yank-hook= (Matthew L. Fidler)
 - 13-Jun-2012 ::  Added =auto-indent-after-yank-hook= (Matthew L. Fidler)
 - 18-May-2012 ::  Changed =auto-indent-next-pair= to be off by default. (Matthew L. Fidler)
 - 13-Mar-2012 ::  Made timer for parenthetical statements customizable. (Matthew L. Fidler)
 - 06-Mar-2012 ::  Speed enhancements for parenthetical statements. (Matthew L. Fidler)
 - 05-Mar-2012 ::  Bug fix for autopair-backspace. (Matthew L. Fidler)
 - 05-Mar-2012 ::  Have backspace cancel parenthetical alignment timer canceling (Matthew L. Fidler)
 - 29-Feb-2012 ::  Bug fix for paren handling. (Matthew L. Fidler)
 - 29-Feb-2012 ::  Made the handling of pairs a timer-based function so it doesn't interfere with work flow. (Matthew L. Fidler)
 - 29-Feb-2012 ::  Better handling of pairs. (Matthew L. Fidler)
 - 28-Feb-2012 ::  Added subsequent-whole-line from Le Wang's fork. (Matthew L. Fidler)
 - 14-Feb-2012 ::  Fixing issue #2 (Matthew L. Fidler)
 - 01-Feb-2012 ::  Added makefile-gmake-mode to the excluded auto-indent modes. (Matthew L. Fidler)
 - 22-Dec-2011 ::  Added bug fix for home-key (Matthew L. Fidler)
 - 21-Dec-2011 ::  Added another smart delete case. (Matthew L. Fidler)
 - 14-Dec-2011 ::  Went back to last known working =auto-indent-def-del-forward-char= and deleted message. (Matthew L. Fidler)
 - 14-Dec-2011 ::  Another Paren (Matthew L. Fidler)
 - 14-Dec-2011 ::  Paren Bug Fix. (Matthew L. Fidler)
 - 14-Dec-2011 ::  Changed the =auto-indent-kill-remove-extra-spaces= default to nil so that you copy-paste what you expect. (Matthew L. Fidler)
 - 10-Dec-2011 ::  Bug fix for annoying old debugging macros. (Matthew L. Fidler)
 - 08-Dec-2011 ::  Added autoload cookie. (Matthew L. Fidler)
 - 08-Dec-2011 ::  Bug fix for duplicate macros (Matthew L. Fidler)
 - 08-Dec-2011 ::  Added (( and )) to the automatically delete extra whitespace at the end of a function list. (Matthew L. Fidler)
 - 08-Dec-2011 ::  Added =auto-indent-alternate-return-function-for-end-of-line-then-newline= option (Matthew L. Fidler)
 - 08-Dec-2011 ::  Added a possibility of adding a space if necessary. (Matthew L. Fidler)
 - 08-Dec-2011 ::  Smarter delete end of line character enhancements. (Matthew L. Fidler)
 - 08-Dec-2011 ::  Changed default options. (Matthew L. Fidler)
 - 29-Nov-2011 ::  Bug Fix in =auto-indent-mode-pre-command-hook= (Matthew L. Fidler)
 - 28-Nov-2011 ::  Bugfix for auto-indent-mode (Matthew L. Fidler)
 - 21-Nov-2011 ::  Changed =auto-indent-after-begin-or-finish-sexp= to be called after every other hook has been run. That way autopair-mode should be indented correctly. (Matthew L. Fidler)
 - 18-Nov-2011 ::  Added =auto-indent-after-begin-or-finish-sexp= (Matthew L. Fidler)
 - 08-Apr-2011 ::  Bug fix for when Yasnippet is disabled. Now will work with it disabled or enabled. (Matthew L. Fidler)
 - 08-Mar-2011 ::  Changed =auto-indent-delete-line-char-remove-extra-spaces= to nil by default. (Matthew L. Fidler)
 - 16-Feb-2011 ::  Added a just one space function for pasting (Matthew L. Fidler)
 - 15-Feb-2011 ::  Removed the deactivation of advices when this mode is turned off. I think it was causing some issues. (Matthew L. Fidler)
 - 10-Feb-2011 ::  Added check to make sure not trying to paste on indent for =auto-indent-disabled-modes-list=  (Matthew L. Fidler)
 - 03-Feb-2011 ::  Swap =backward-delete-char= with =backward-delete-char-untabify=. Also use =auto-indent-backward-delete-char-behavior= when auto-indent-mode is active.  (Matthew L. Fidler)
 - 03-Feb-2011 ::  Added definition of =cua-copy-region= to advised functions (I thought it would have been taken care of with =kill-ring-save=)  (Matthew L. Fidler)
 - 03-Feb-2011 ::  Added option to delete indentation when copying or cutting regions using =kill-region= and =kill-ring-save=. Also changed =auto-indent-kill-line-remove-extra-spaces= to =auto-indent-kill-remove-extra-spaces=  (Matthew L. Fidler)
 - 03-Feb-2011 ::  Made sure that auto-indent-kill-line doesn't use the kill-line advice. (Matthew L. Fidler)
 - 03-Feb-2011 ::   (Matthew L. Fidler)
 - 03-Feb-2011 ::  Another kill-line bug-fix. (Matthew L. Fidler)
 - 03-Feb-2011 ::  Fixed the kill-line bug (Matthew L. Fidler)
 - 03-Feb-2011 ::  yank engine bug fix. (Matthew L. Fidler)
 - 03-Feb-2011 ::  Bug fix for determining if the function is a yank (Matthew L. Fidler)
 - 02-Feb-2011 ::  Added kill-line bug-fix from Le Wang. Also there is a the bug of when called as a function, you need to check for disabled modes every time.  (Matthew L. Fidler)
 - 02-Feb-2011 ::  Added interactive requriment again. This time tried to back-guess if the key has been hijacked. If so assume it was called interactively.  (Matthew L. Fidler)
 - 01-Feb-2011 ::  Took out the interactive requirement again. Causes bugs like org-delete-char below. (Matthew L. Fidler)
 - 01-Feb-2011 ::  Bug fix for org-delete-char (and possibly others). Allow delete-char to have auto-indent changed behavior when the command lookup is the same as the delete command (as well as if it is called interactively) (Matthew L. Fidler)
 - 01-Feb-2011 ::  Added bugfix to kill-line advice and function (from Le Wang) (Matthew L. Fidler)
 - 01-Feb-2011 ::  Added cua-paste and cua-paste-pop (Matthew L. Fidler)
 - 01-Feb-2011 ::  Added auto-indent on move up and down with the arrow keys. (Matthew L. Fidler)
 - 01-Feb-2011 ::  Added a keyboard engine that indents instead of using hooks and advices. (Matthew L. Fidler)
 - 01-Feb-2011 ::  Removed the interactivity in the hooks. They are definitely not interactive. (Matthew L. Fidler)
 - 01-Feb-2011 ::  Added Le Wang's fixes: 
    + Many functions are checked for interactivity
    + Kill-line prefix argument is fixed
    + Kill region when region is active is controled by auto-indent-kill-line-kill-region-when-active
    + Kill-line when at eol has more options
    + Change auto-indent-indentation-function to auto-indent-newline-function  (Matthew L. Fidler)
 - 31-Jan-2011 ::  Removed indirect reference to =shrink-whitespaces=. Thanks Le Wang (Matthew L. Fidler)
 - 31-Jan-2011 ::  Added explicit requirement for functions (Matthew L. Fidler)
 - 18-Jan-2011 ::  Added support to turn on =org-indent-mode= when inside an org-file. (Matthew L. Fidler)
 - 12-Jan-2011 ::  Added fix for ortbl-minor-mode. Now it will work when orgtbl-minor mode is enabled. (Matthew L. Fidler)
 - 09-Dec-2010 ::  Bugfix. Now instead of indenting the region pasted, indent the region-pasted + beginning of line at region begin and end of line at region end. (Matthew L. Fidler)
 - 02-Dec-2010 ::  Last-Updated: Thu Dec 2 13:02:02 2010 (-0600) #411 (Matthew L. Fidler) Made ignoring of modes with indent-relative and indent-relative-maybe apply to indenting returns as well. (Matthew L. Fidler)
 - 02-Dec-2010 ::  Removed auto-indent on paste/yank for modes with indent-relative and indent-relative-maybe. This has annoyed me forever. (Matthew L. Fidler)
 - 02-Dec-2010 ::  Added an advice to delete-char. When deleting a new-line character, shrink white-spaces afterward. (Matthew L. Fidler)
 - 02-Dec-2010 ::  Speed enhancement by checking for yasnippets only on indentation. (Matthew L. Fidler)
 - 29-Nov-2010 ::  Bug fix to allow authotkey files to save. (Matthew L. Fidler)
 - 29-Nov-2010 ::  Change auto-indent-on-save to be disabled by default. (Matthew L. Fidler)
 - 22-Nov-2010 ::  Yasnippet bug-fix. (Matthew L. Fidler)
 - 22-Nov-2010 ::  auto-indent bug fix for save on save buffer hooks. (Matthew L. Fidler)
 - 16-Nov-2010 ::  Added conf-windows-mode to ignored modes. (Matthew L. Fidler)
 - 15-Nov-2010 ::  Bugfix for deletion of whitespace (Matthew L. Fidler)
 - 15-Nov-2010 ::  Bugfix for post-command-hook. (Matthew L. Fidler)
 - 15-Nov-2010 ::  Added diff-mode to excluded modes for auto-indentaion. (Matthew L. Fidler)
 - 15-Nov-2010 ::  Added fundamental mode to excluded modes for auto-indentation. (Matthew L. Fidler)
 - 13-Nov-2010 ::  Bug fix try #3 (Matthew L. Fidler)
 - 13-Nov-2010 ::  Anothe bug-fix for yasnippet. (Matthew L. Fidler)
 - 13-Nov-2010 ::  Bug fix for auto-indent-mode. Now it checks to make sure that =last-command-event= is non-nil.  (Matthew L. Fidler)
 - 11-Nov-2010 ::  Put back processes in. Made the return key handled by pre and post-command-hooks. (Matthew L. Fidler)
 - 11-Nov-2010 ::  Took out processes such as *R* or *eshell* (Matthew L. Fidler)
 - 09-Nov-2010 ::  Bug fix when interacting with the SVN version of yasnippet. It will not perform the line indentation when Yasnippet is running.  (Matthew L. Fidler)
 - 09-Nov-2010 ::  Made sure that the auto-paste indentation doesn't work in minibuffer. (Matthew L. Fidler)
 - 09-Nov-2010 ::  When =auto-indent-pre-command-hook= is inactivated by some means, add it back. (Matthew L. Fidler)
 - 09-Nov-2010 ::  Added snippet-mode to excluded modes. Also turned off the kill-line by default. (Matthew L. Fidler)
 - 07-Nov-2010 ::  Added the possibility of TextMate type returns. (Matthew L. Fidler)
 - 07-Nov-2010 ::  Bug fix where backspace on indented region stopped working.Added TextMate (Matthew L. Fidler)
 - 07-Nov-2010 ::  Another small bug fix. (Matthew L. Fidler)
 - 07-Nov-2010 ::  Added bugfix and also allow movement on blank lines to be automatically indented to the correct position.  (Matthew L. Fidler)
 - 06-Nov-2010 ::  Initial release.  (Matthew L. Fidler)
